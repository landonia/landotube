{"FileName":"","Created":"2015-05-26T14:26:09.242651174+01:00","Updated":"2015-05-26T14:26:09.242651204+01:00","Title":"To Infinity... and Beyond.... Well more Beyond Infinity really 2","Summary":"The simplegoblog has finally been finished (well enough of it anyway)","Body":"\u003cp\u003eSo I finally managed to complete enough of \u003ca href=\"https://github.com/landonia/simplegoblog\"\u003esimplegoblog\u003c/a\u003e to host landotube. The simplegoblog engine allows you to create in-memory blogs that are blistering fast and takes little memory. The engine itself is written using \u003ca href=\"http://golang.org\"\u003eGolang\u003c/a\u003e. The actual blog posts are written in JSON and are retrieved from a folder location that you configure. The same is true of the assets and templates, allowing you to customise it to your hearts content.\u003c/p\u003e\u003cp\u003eI'm actually working on a new application, that is, when I'm not working ridiculous hours on my day job. When I do find time, I want to create a publishing service that can be run locally to create the blog posts, using an HTML interface, which can then be pushed to the production service more easily.\u003c/p\u003e\u003cp\u003eThis actual blog service is managed using \u003ca href=\"http://upstart.ubuntu.com\"\u003eupstart\u003c/a\u003e and hosted on a $5 \u003ca href=\"https://www.digitalocean.com/?refcode=c4afa28e98a2\"\u003eDigitalOcean\u003c/a\u003e droplet. It should be more than capable of handling the traffic generated from something like being reddited - if you're fortunate enough that is.\u003c/p\u003e"}
